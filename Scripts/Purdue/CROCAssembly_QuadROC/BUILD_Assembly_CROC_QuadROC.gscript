VERSION v2.1
######################## BUILD CROC Assembly Quad ROC #############################
# Steps:
# 1. Prompt what station the assembly will occur at
# 2. Prompt placement of HDI and turn on the HDI's vacuum
# 3. Move the gantry to the HDI for surveillance
# 4. Compute would-be position and rotation of HDI on Chuck 0
# 5. Compute the positions of the centers of the ROCs
# 6. Prompt the placement of the ROCs
#    i. Is the end placement location clear?
#    ii. Is the Pickup Tool ready?
# 7. Survey the ROCs
# 8. Calculate the centers of the ROCs
# 9. Pick up the ROCs and place them at positions computed in Step 5
# 10. Prompt placement of vacuum tool on the HDI and switch the vacuum
# 11. Check that the HDI was moved and the adhesive was applied
# 12. Prompt placement of Vacuum Tool bearing HDI onto the ROCs
# 13. Export the variables
# 14. End program with vacuums on or off

# Initialize the system
LOADCONFIG
HOME
SETVAC gantry_head_inner 0
SETVAC gantry_head_outer 0
SETVAC croc2x2_launchROC_tr 0
SETVAC croc2x2_launchROC_br 0
SETVAC croc2x2_launchROC_bl 0
SETVAC croc2x2_launchROC_tl 0
SETVAC croc2x2_launchHDI 0
SETLOG "LOG_SPLIT_Assembly_CROC_QuadROC_DataGeneration.txt"
SETERRORMODE prompt

# Rough position of the top bond pad on the CROC HDI (LaunchHDI)
FLEXREAD $pos_croc2x2_hdi_TR siteGeometry.pos_croc2x2_hdi_TR
FLEXREAD $pos_croc2x2_hdi_BR siteGeometry.pos_croc2x2_hdi_BR
FLEXREAD $pos_croc2x2_hdi_BL siteGeometry.pos_croc2x2_hdi_BL
FLEXREAD $pos_croc2x2_hdi_TL siteGeometry.pos_croc2x2_hdi_TL

# Rough Positions of the top right corner of the two ROCs (LaunchROC)
FLEXREAD $pos_croc2x2_TR siteGeometry.pos_croc2x2_TR
FLEXREAD $pos_croc2x2_BR siteGeometry.pos_croc2x2_BR
FLEXREAD $pos_croc2x2_BL siteGeometry.pos_croc2x2_BL
FLEXREAD $pos_croc2x2_TL siteGeometry.pos_croc2x2_TL

# Dimensions of the HDI and one of the ROCs
FLEXREAD $thickness_croc2x2HDI geometry.TFPX_CROC2X2_HDI.thickness
FLEXREAD $thickness_quadROC geometry.TFPX_CROC2X2_QUADROC.thickness

# QuadROC dimensions
FLEXREAD $quadROC_bondsToCenter siteGeometry.quadROC_bondsToCenter

# Bondpad lengths
FLEXREAD $dist_quadHDI_bondpads geometry.dist_quadHDI_bondpads
FLEXREAD $dist_quadROC_bondpads geometry.dist_quadROC_bondpads

# Statistical offsets
FLEXREAD $delta_TRROC siteGeometry.delta_TRROC
FLEXREAD $delta_BRROC siteGeometry.delta_BRROC
FLEXREAD $delta_BLROC siteGeometry.delta_BLROC
FLEXREAD $delta_TLROC siteGeometry.delta_TLROC

# Rotate by 90 degrees for pickup and placement
COPY $rotate_tool 0


## Main Function ##

# Step 1. Prompt what station the assembly will occur at and take in those values
@STEP_ONE COPY $station 0

@FLEXREADING PASS
FLEXREAD $croc2x2_v_translation "siteGeometry.croc2x2_v_translation_STAT_{$station}"
FLEXREAD $croc2x2_rot_translation "siteGeometry.croc2x2_rot_translation_STAT_{$station}"
SETVAC "croc2x2_chuck_{$station}_tr" 0
SETVAC "croc2x2_chuck_{$station}_br" 0
SETVAC "croc2x2_chuck_{$station}_bl" 0
SETVAC "croc2x2_chuck_{$station}_tl" 0
#ADD $croc2x2_v_translation.z $croc2x2_v_translation.z $thickness_croc2x2HDI
SUB $croc2x2_v_translation.z $croc2x2_v_translation.z $thickness_quadROC

# Step 2. Prompt placement of HDI and turn on the HDI's vacuum
PRINT "--------------------------"
@STEP_TWO CHOICEPOPUP $choice "Have you placed the CROC 2x2 HDI in its correct starting location?" "Yes, continue" "No, ask me again"
GOTOIFN @STEP_TWO $choice
SETVAC croc2x2_launchHDI 1

# Step 3. Move the gantry to the HDI for surveillance
@STEP_THREE PASS
MOVENAME crocStaging 100
@HDI CHOICEPOPUP $choice "Ready to survey the HDI?" "Yes" "No, ask again"
GOTOIFN @HDI $choice
CALL @FINDBONDCENTERS $pos_croc2x2_hdi_TR $dist_quadHDI_bondpads -> $pos_croc_TRhdi_top $pos_croc_TRhdi_bot
CALL @FINDBONDCENTERS $pos_croc2x2_hdi_BR $dist_quadHDI_bondpads -> $pos_croc_BRhdi_top $pos_croc_BRhdi_bot
CALL @FINDBONDCENTERS $pos_croc2x2_hdi_BL $dist_quadHDI_bondpads -> $pos_croc_BLhdi_top $pos_croc_BLhdi_bot
CALL @FINDBONDCENTERS $pos_croc2x2_hdi_TL $dist_quadHDI_bondpads -> $pos_croc_TLhdi_top $pos_croc_TLhdi_bot


# Step 4. Compute would-be position and rotation of HDI on Chuck 0
@STEP_FOUR PASS
CALL @CALCPOSANDROT $pos_croc_TRhdi_top $pos_croc_TRhdi_bot -> $pos_TRhdi_final $rot_TRhdi_final
ADD $pos_TRhdi_final $pos_TRhdi_final $croc2x2_v_translation
ADD $rot_TRhdi_final $rot_TRhdi_final $croc2x2_rot_translation

CALL @CALCPOSANDROT $pos_croc_BRhdi_top $pos_croc_BRhdi_bot -> $pos_BRhdi_final $rot_BRhdi_final
ADD $pos_BRhdi_final $pos_BRhdi_final $croc2x2_v_translation
ADD $rot_BRhdi_final $rot_BRhdi_final $croc2x2_rot_translation

CALL @CALCPOSANDROT $pos_croc_BLhdi_top $pos_croc_BLhdi_bot -> $pos_BLhdi_final $rot_BLhdi_final
ADD $pos_BLhdi_final $pos_BLhdi_final $croc2x2_v_translation
ADD $rot_BLhdi_final $rot_BLhdi_final $croc2x2_rot_translation

CALL @CALCPOSANDROT $pos_croc_TLhdi_top $pos_croc_TLhdi_bot -> $pos_TLhdi_final $rot_TLhdi_final
ADD $pos_TLhdi_final $pos_TLhdi_final $croc2x2_v_translation
ADD $rot_TLhdi_final $rot_TLhdi_final $croc2x2_rot_translation


# Step 5. Compute the positions of the centers of the two CROCs
@STEP_FIVE PASS
COPY $plus_deltaX {2.2,0,0}
COPY $neg_deltaX {-2.2,0,0}
MUL $neg_quadROC_bondsToCenter $quadROC_bondsToCenter -1

# TR
CALL @FINDCOORD $pos_TRhdi_final $rot_TRhdi_final $plus_deltaX -> $pos_TRROC_bond_center
ADD $pos_TRROC_bond_center $pos_TRROC_bond_center $delta_TRROC
CALL @FINDCOORD $pos_TRROC_bond_center $rot_TRhdi_final $neg_quadROC_bondsToCenter -> $pos_TRROC_final

# BR
CALL @FINDCOORD $pos_BRhdi_final $rot_BRhdi_final $plus_deltaX -> $pos_BRROC_bond_center
ADD $pos_BRROC_bond_center $pos_BRROC_bond_center $delta_BRROC
CALL @FINDCOORD $pos_BRROC_bond_center $rot_BRhdi_final $neg_quadROC_bondsToCenter -> $pos_BRROC_final

# BL
CALL @FINDCOORD $pos_BLhdi_final $rot_BLhdi_final $neg_deltaX -> $pos_BLROC_bond_center
ADD $pos_BLROC_bond_center $pos_BLROC_bond_center $delta_BLROC
CALL @FINDCOORD $pos_BLROC_bond_center $rot_BLhdi_final $quadROC_bondsToCenter -> $pos_BLROC_final

# TL
CALL @FINDCOORD $pos_TLhdi_final $rot_TLhdi_final $neg_deltaX -> $pos_TLROC_bond_center
ADD $pos_TLROC_bond_center $pos_TLROC_bond_center $delta_TLROC
CALL @FINDCOORD $pos_TLROC_bond_center $rot_TLhdi_final $quadROC_bondsToCenter -> $pos_TLROC_final

MOVENAME crocStaging 100


# Step 6. Prompt the placement of the croc ROCs
@STEP_SIX SETVAC gelpak_release 1
CHOICEPOPUP $choice "Have you placed the four croc ROCs in their starting positions?" "Yes, continue" "No, ask me again"
GOTOIFN @STEP_SIX $choice
SETVAC gelpak_release 0
SETVAC croc2x2_launchROC_tr 1
SETVAC croc2x2_launchROC_br 1
SETVAC croc2x2_launchROC_bl 1
SETVAC croc2x2_launchROC_tl 1

  #i. Is the end placement location clear?
@STEP_FIVE_i CHOICEPOPUP $choice "Is chuck 0 clear?" "Yes, continue" "No, ask me again"
GOTOIFN @STEP_FIVE_i $choice

  #ii. Is the Pickup Tool ready?
@STEP_FIVE_ii CHOICEPOPUP $choice "Is the Pickup Tool ready?" "Yes, continue" "No, ask me again"
GOTOIFN @STEP_FIVE_ii $choice


# Step 7. Survey the croc ROCs
@STEP_SEVEN PASS

@CROC_TR CHOICEPOPUP $choice "Ready to survey the Top Right ROC?" "Yes" "No, ask again"
GOTOIFN @CROC_TR $choice
CALL @FINDBONDCENTERS $pos_croc2x2_TR $dist_quadROC_bondpads -> $pos_croc_TRROC_top $pos_croc_TRROC_bot

@CROC_BR CHOICEPOPUP $choice "Ready to survey the Bottom Right ROC?" "Yes" "No, ask again"
GOTOIFN @CROC_BR $choice
CALL @FINDBONDCENTERS $pos_croc2x2_BR $dist_quadROC_bondpads -> $pos_croc_BRROC_top $pos_croc_BRROC_bot

@CROC_BL CHOICEPOPUP $choice "Ready to survey the Bottom Left ROC?" "Yes" "No, ask again"
GOTOIFN @CROC_BL $choice
CALL @FINDBONDCENTERS $pos_croc2x2_BL $dist_quadROC_bondpads -> $pos_croc_BLROC_top $pos_croc_BLROC_bot

@CROC_TL CHOICEPOPUP $choice "Ready to survey the Top Left ROC?" "Yes" "No, ask again"
GOTOIFN @CROC_TL $choice
CALL @FINDBONDCENTERS $pos_croc2x2_TL $dist_quadROC_bondpads -> $pos_croc_TLROC_top $pos_croc_TLROC_bot


# Step 8. Calculate the center of the Four CROCs
@STEP_EIGHT PASS

  # Top Right
CALL @CALCPOSANDROT $pos_croc_TRROC_top $pos_croc_TRROC_bot -> $pos_TRROC_bond_initial $rot_TRROC_initial
CALL @FINDCOORD $pos_TRROC_bond_initial $rot_TRROC_initial $neg_quadROC_bondsToCenter -> $pos_TRROC_initial

  # Bottom Right
CALL @CALCPOSANDROT $pos_croc_BRROC_top $pos_croc_BRROC_bot -> $pos_BRROC_bond_initial $rot_BRROC_initial
CALL @FINDCOORD $pos_BRROC_bond_initial $rot_BRROC_initial $neg_quadROC_bondsToCenter -> $pos_BRROC_initial

  # Bottom Left
CALL @CALCPOSANDROT $pos_croc_BLROC_top $pos_croc_BLROC_bot -> $pos_BLROC_bond_initial $rot_BLROC_initial
CALL @FINDCOORD $pos_BLROC_bond_initial $rot_BLROC_initial $quadROC_bondsToCenter -> $pos_BLROC_initial

  # Top Left
CALL @CALCPOSANDROT $pos_croc_TLROC_top $pos_croc_TLROC_bot -> $pos_TLROC_bond_initial $rot_TLROC_initial
CALL @FINDCOORD $pos_TLROC_bond_initial $rot_TLROC_initial $quadROC_bondsToCenter -> $pos_TLROC_initial


# Step 9. Pick up the CROCs and place them at positions computed in Step 8
@STEP_NINE PASS
MOVENAME tool_rack_pos_2_out 200
LOADTOOL picker_tool
MOVENAME crocStaging 200

  #############################
  # Top Right ROC Pickup Step #
CALL @CALCPICKUP $pos_TRROC_initial $rot_TRROC_initial -> $pos $pos_z0
ADD $changed_rot_TRROC_initial $rot_TRROC_initial $rotate_tool
CALL @PICKUPPART $pos $pos_z0 $changed_rot_TRROC_initial 0

  # Top Right ROC Place Step #
CALL @CALCPICKUP $pos_TRROC_final $rot_TRhdi_final -> $pos $pos_z0
ADD $changed_rot_TRhdi_final $rot_TRhdi_final $rotate_tool
CALL @PLACEPART $pos $pos_z0 $changed_rot_TRhdi_final $station 0
  ##############################################################

  ################################
  # Bottom Right ROC Pickup Step #
CALL @CALCPICKUP $pos_BRROC_initial $rot_BRROC_initial -> $pos $pos_z0
ADD $changed_rot_BRROC_initial $rot_BRROC_initial $rotate_tool
CALL @PICKUPPART $pos $pos_z0 $changed_rot_BRROC_initial 1

  # Bottom Right ROC Place Step #
CALL @CALCPICKUP $pos_BRROC_final $rot_BRhdi_final -> $pos $pos_z0
ADD $changed_rot_BRhdi_final $rot_BRhdi_final $rotate_tool
CALL @PLACEPART $pos $pos_z0 $changed_rot_BRhdi_final $station 1
  ##############################################################

  ###############################
  # Bottom Left ROC Pickup Step #
CALL @CALCPICKUP $pos_BLROC_initial $rot_BLROC_initial -> $pos $pos_z0
ADD $changed_rot_BLROC_initial $rot_BLROC_initial $rotate_tool
CALL @PICKUPPART $pos $pos_z0 $changed_rot_BLROC_initial 2

  # Bottom Left ROC Place Step #
CALL @CALCPICKUP $pos_BLROC_final $rot_BLhdi_final -> $pos $pos_z0
ADD $changed_rot_BLhdi_final $rot_BLhdi_final $rotate_tool
CALL @PLACEPART $pos $pos_z0 $changed_rot_BLhdi_final $station 2
  ##############################################################

  ############################
  # Top Left ROC Pickup Step #
CALL @CALCPICKUP $pos_TLROC_initial $rot_TLROC_initial -> $pos $pos_z0
ADD $changed_rot_TLROC_initial $rot_TLROC_initial $rotate_tool
CALL @PICKUPPART $pos $pos_z0 $changed_rot_TLROC_initial 3

  # Top Left ROC Place Step #
CALL @CALCPICKUP $pos_TLROC_final $rot_TLhdi_final -> $pos $pos_z0
ADD $changed_rot_TLhdi_final $rot_TLhdi_final $rotate_tool
CALL @PLACEPART $pos $pos_z0 $changed_rot_TLhdi_final $station 3
  ##############################################################

MOVENAME tool_rack_pos_2_out 200
UNLOADTOOL

HOME
END



# SURVEYCORNERS
# Arguments:
# $x_corner - Approximate position of an object that you would like to know the precise position. Returns with precise position written in this location
#
# Returns:
# $x_corner - Updated position of the corner that is being looked for
@SURVEYCORNERS(x_corner)
  MOVESAFE $x_corner 100
  @SURCORNPOP VIDEO
  CHOICEPOPUP $choice "Did you correctly align the cursor with the marker?" "Yes" "No"
  GOTOIFN @SURCORNPOP $choice
  GETPOS $x_corner
  RETURN $x_corner


# FINDBONDCENTERS
# Arguments:
# $top_bond1 - rough position of a corner of the top bond pad
# $bond_len - length of the bond pads
#
# Returns:
# $top_bond - center of the top-most bond pad
# $bot_bond - center of the bottom-most bond pad
@FINDBONDCENTERS(top_bond1,bond_len)
  @FIND_0 CHOICEPOPUP $choice "Ready to find a corner of the top bond pad?" "Yes" "No"
  GOTOIFN @FIND_0 $choice
  CALL @SURVEYCORNERS $top_bond1 -> $top_bond1

  COPY $top_bond2 $top_bond1
  @FIND_1 CHOICEPOPUP $choice "Ready to find the opposite corner of the top bond pad?" "Yes" "No"
  GOTOIFN @FIND_1 $choice
  CALL @SURVEYCORNERS $top_bond2 -> $top_bond2

  COPY $bot_bond1 $top_bond1
  ADD $bot_bond1.y $bot_bond1.y $bond_len
  @FIND_2 CHOICEPOPUP $choice "Ready to find a corner of the bottom bond pad?" "Yes" "No"
  GOTOIFN @FIND_2 $choice
  CALL @SURVEYCORNERS $bot_bond1 -> $bot_bond1

  COPY $bot_bond2 $bot_bond1
  @FIND_3 CHOICEPOPUP $choice "Ready to find the opposite corner of the top bond pad?" "Yes" "No"
  GOTOIFN @FIND_3 $choice
  CALL @SURVEYCORNERS $bot_bond2 -> $bot_bond2

    # Getting the center of the bond pads
  ADD $top_bond $top_bond1 $top_bond2
  MUL $top_bond $top_bond {0.5,0.5,0.5}
  ADD $bot_bond $bot_bond1 $bot_bond2
  MUL $bot_bond $bot_bond {0.5,0.5,0.5}
  RETURN $top_bond $bot_bond


# CALCPOSANDROT
# Arguments:
# $top_pos - position of the center of the top hdi bond pad
# $bot_pos - position of the center of the bottom hdi bond pad
#
# Returns:
# $pos - the center position between the two points
# $rot - the rotation of the hdi (knowing the gantry's rotational system)
@CALCPOSANDROT(top_pos,bot_pos)
  ADD $pos $top_pos $bot_pos
  MUL $pos $pos {0.5,0.5,0.5}

  SUB $x_input $bot_pos.y $top_pos.y
  SUB $y_input $top_pos.x $bot_pos.x
  ATAN2 $rot $x_input $y_input

  RETURN $pos $rot


# FIND COORD
# Arguments:
# $int_pos - initial position
# $int_rot - initial rotation
# $deltas - change in x and y in the int_rot coordinate system {delta_x, delta_y, 0}
#         - these values can be positive or negative
#
# Returns:
# $fin_pos - final position
@FINDCOORD(int_pos,int_rot,deltas)
  COPY $fin_pos $int_pos
  COPY $delta_x $deltas.x
  COPY $delta_y $deltas.y

  SIN $sin_theta $int_rot
  COS $cos_theta $int_rot

  MUL $dx_sin $delta_x $sin_theta
  MUL $dx_cos $delta_x $cos_theta
  MUL $dy_sin $delta_y $sin_theta
  MUL $dy_cos $delta_y $cos_theta

  ADD $fin_pos.x $fin_pos.x $dx_cos
  SUB $fin_pos.x $fin_pos.x $dy_sin

  ADD $fin_pos.y $fin_pos.y $dx_sin
  ADD $fin_pos.y $fin_pos.y $dy_cos

  RETURN $fin_pos


# CALCPICKUP
# Arguments:
#  $target_pos - center of piece to pickup/place
#  $target_rot - rotation of piece to pickup/place
#
# Returns:
#  $pickup_pos - pickup position
#  $pickup_pos_z0 - pickup position with z = 0
@CALCPICKUP(target_pos,target_rot)
  FLEXREAD $picker_height geometry.PICKER_TOOL.center_offset
  FLEXREAD $ghco geometry.tool_holder_offset
  ADD $netoffset $picker_height $ghco
  SUB $pickup_pos $target_pos $netoffset
  COPY $pickup_pos_z0 $pickup_pos
  COPY $pickup_pos_z0.z 0
  RETURN $pickup_pos $pickup_pos_z0


# PICKUPPART
# takes place directly after CALCPICKUP
# Arguments:
#  $pick_pos - pickup position
#  $pick_pos_z0 - pickup position with z = 0
#  $pick_rot - rotation of the what is being picked up
#  $location - value of 0 for "top" and 1 for "bot"
#
# No Returns
@PICKUPPART(pick_pos,pick_pos_z0,pick_rot,location)
  MOVESAFE $pick_pos_z0 200
  ROTATETO $pick_rot 10
  SUB $pick_pos.z $pick_pos.z 2
  MOVETO $pick_pos 50
  ADD $pick_pos.z $pick_pos.z 2
  MOVETO $pick_pos 1
  WAIT 500
  SETVAC gantry_head_inner 1
  WAIT 2000
  GOTOIF @TR_VACUUM_OFF `$location==0`
  GOTOIF @BR_VACUUM_OFF `$location==1`
  GOTOIF @BL_VACUUM_OFF `$location==3`
  GOTOIF @TL_VACUUM_OFF `$location==4`

    # Top Right
  @TR_VACUUM_OFF SETVAC "croc2x2_launchROC_tr" 0
  GOTO @PICK_WAIT
    # Bottom Right
  @BR_VACUUM_OFF SETVAC "croc2x2_launchROC_br" 0
  GOTO @PICK_WAIT
    # Bottom Left
  @BL_VACUUM_OFF SETVAC "croc2x2_launchROC_bl" 0
  GOTO @PICK_WAIT
    # Top Left
  @TL_VACUUM_OFF SETVAC "croc2x2_launchROC_tl" 0
  @PICK_WAIT WAIT 1000
  SUB $pick_pos.z $pick_pos.z 2
  MOVETO $pick_pos 1
  MOVETO $pick_pos_z0 25
  RETURN


# PLACEPART
# takes place directly after CALCPICKUP
# Arguments:
#  $place_pos - pickup position
#  $place_pos_z0 - pickup position with z = 0
#  $place_rot - rotation of the what is being picked up
#  $stat - station number
#  $location - string that is either "top" or "bot"
#
# No Returns
@PLACEPART(place_pos,place_pos_z0,place_rot,stat,location)
  MOVESAFE $place_pos_z0 200
  ROTATETO $place_rot 10
  SUB $place_pos.z $place_pos.z 2
  MOVETO $place_pos 50
  ADD $place_pos.z $place_pos.z 2
  MOVETO $place_pos 1
  WAIT 500

  GOTOIF @TR_VACUUM_ON `$location==0`
  GOTOIF @BR_VACUUM_ON `$location==1`
  GOTOIF @BL_VACUUM_ON `$location==3`
  GOTOIF @TL_VACUUM_ON `$location==4`

    # Top Right
  @TR_VACUUM_ON SETVAC "croc2x2_chuck_{$stat}_tr" 0
  GOTO @PLACE_WAIT
    # Bottom Right
  @BR_VACUUM_ON SETVAC "croc2x2_chuck_{$stat}_br" 0
  GOTO @PLACE_WAIT
    # Bottom Left
  @BL_VACUUM_ON SETVAC "croc2x2_chuck_{$stat}_bl" 0
  GOTO @PLACE_WAIT
    # Top Left
  @TL_VACUUM_ON SETVAC "croc2x2_chuck_{$stat}_tl" 0
  @PLACE_WAIT WAIT 1000
  SETVAC gantry_head_inner 0
  WAIT 2000
  SUB $place_pos.z $place_pos.z 2
  MOVETO $place_pos 1
  MOVETO $place_pos_z0 25
  RETURN
