VERSION v2.1
######################## RD53A Multiple ROC Assembly #############################
# Jaiveer Dutta, jsdutta@purdue.edu
# Purdue University Department of Physics and Astronomy
# April 2023
# -----------------------------------------------------
# Steps:
# 1. Prompt placement of HDI on LaunchHDI and turn on the HDI's vacuum
# 2. Move the gantry to the HDI for surveillance
# 3. Compute would-be position and rotation of HDI on Chuck 0
# 4. Compute would-be positions and rotations of all 4 CROCs on Chuck 0
# 5. Prompt removal of 4 CROC Digital chips from gelpack and placement on LaunchROC
#    i.   Pull vacuum on gelpack
#    ii.  Is the end placement location clear?
#    iii. Is the Pickup Tool ready?
# 7. Survey the 4 CROCs on LaunchROC. Their positions and rotations are calculated.
# 8. Pick up the CROCs and place them on Chuck 0 positions computed in Step 4

#Initialize the system
LOADCONFIG
HOME
SETVAC gantry_head_inner 0
SETVAC gantry_head_outer 0
SETVAC croc2x2_launchROC_tr 0
SETVAC croc2x2_launchROC_br 0
SETVAC croc2x2_launchROC_bl 0
SETVAC croc2x2_launchROC_tl 0
SETVAC croc2x2_launchHDI 0
SETVAC croc2x2_chuck_0_tr 0
SETVAC croc2x2_chuck_0_br 0
SETVAC croc2x2_chuck_0_bl 0
SETVAC croc2x2_chuck_0_tl 0
SETLOG "LOG_SPLIT_Assembly_CROC_QuadROC_DataGeneration.txt"
SETERRORMODE prompt

# Rough position of the top-right bond pad on the CROC HDI (LaunchHDI)
FLEXREAD $pos_croc2x2_hdi_TR siteGeometry.pos_croc2x2_hdi_TR
FLEXREAD $dim_croc2x2_hdi geometry.TFPX_CROC2X2_HDI.fid_br
MUL $dim_croc2x2_hdi $dim_croc2x2_hdi {2,2,0}

# Rough position of the top right corners of the four CROCs (LaunchROC)
FLEXREAD $pos_croc2x2LaunchROC_TR siteGeometry.pos_croc2x2LaunchROC_TR
FLEXREAD $pos_croc2x2LaunchROC_BR siteGeometry.pos_croc2x2LaunchROC_BR
FLEXREAD $pos_croc2x2LaunchROC_BL siteGeometry.pos_croc2x2LaunchROC_BL
FLEXREAD $pos_croc2x2LaunchROC_TL siteGeometry.pos_croc2x2LaunchROC_TL
FLEXREAD $dim_croc2x2_croc geometry.TFPX_CROC2X2_QUADROC.fid_br

# Read translation vector and rotation from flex_config
FLEXREAD $pos_translation siteGeometry.pos_croc2x2_translation_STAT_0
FLEXREAD $rot_translation siteGeometry.rot_croc2x2_translation_STAT_0

# Parameters that can help line up the bond pads
FLEXREAD $delta_tr siteGeometry.delta_croc2x2_tr
FLEXREAD $delta_br siteGeometry.delta_croc2x2_br
FLEXREAD $delta_bl siteGeometry.delta_croc2x2_bl
FLEXREAD $delta_tl siteGeometry.delta_croc2x2_tl

# Step 1. Prompt placement of HDI and turn on the HDI's vacuum
PRINT "--------------------------"
@STEP_ONE CHOICEPOPUP $choice "Have you placed the CROC 2x2 HDI in its correct starting location?" "Yes, continue" "No, ask me again"
GOTOIFN @STEP_ONE $choice
SETVAC croc2x2_launchHDI 1

# Step 2. Move the gantry to the HDI for surveillance
@STEP_TWO PASS
@HDI_0 CHOICEPOPUP $choice "Ready to find the top-right corner of the HDI's top-right bond pad?" "Yes" "No"
GOTOIFN @HDI_0 $choice
CALL @SURVEYPOS $pos_croc2x2_hdi_TR -> $pos_croc2x2_hdi_TR

ADD $pos_croc2x2_hdi_BR $pos_croc2x2_hdi_TR {0,$dim_croc2x2_hdi.y,0}
@HDI_1 CHOICEPOPUP $choice "Ready to find the bottom-right corner of the HDI's bottom-right bond pad?" "Yes" "No"
GOTOIFN @HDI_1 $choice
CALL @SURVEYPOS $pos_croc2x2_hdi_BR -> $pos_croc2x2_hdi_BR

SUB $pos_croc2x2_hdi_BL $pos_croc2x2_hdi_BR {$dim_croc2x2_hdi.x,0,0}
@HDI_2 CHOICEPOPUP $choice "Ready to find the bottom-left corner of the HDI's bottom-left bond pad?" "Yes" "No"
GOTOIFN @HDI_2 $choice
CALL @SURVEYPOS $pos_croc2x2_hdi_BL -> $pos_croc2x2_hdi_BL

SUB $pos_croc2x2_hdi_TL $pos_croc2x2_hdi_BL {0,$dim_croc2x2_hdi.y,0}
@HDI_3 CHOICEPOPUP $choice "Ready to find the top-left corner of the HDI's top-left bond pad?" "Yes" "No"
GOTOIFN @HDI_3 $choice
CALL @SURVEYPOS $pos_croc2x2_hdi_TL -> $pos_croc2x2_hdi_TL

# Step 3. Compute would-be position and rotation of HDI on Chuck 0
@STEP_THREE PASS
FIT $pos_croc2x2_hdi_initial $rot_croc2x2_hdi_initial TFPX_CROC2X2_HDI $pos_croc2x2_hdi_TR $pos_croc2x2_hdi_BR $pos_croc2x2_hdi_BL $pos_croc2x2_hdi_TL
ADD $pos_croc2x2_hdi_final $pos_croc2x2_hdi_initial $pos_translation
QUAT2EULER $rot_croc2x2_hdi_initial $trash $trash1 $rot_croc2x2_hdi_initial
ADD $rot_croc2x2_hdi_final $rot_croc2x2_hdi_initial $rot_translation

# Step 4. Compute would-be positions and rotations of all 4 CROCs on Chuck 0
@STEP_FOUR PASS
COS $cos_rot_hdi $rot_croc2x2_hdi_final
SIN $sin_rot_hdi $rot_croc2x2_hdi_final

#TR
ADD $half_len_ROC_tr $dim_croc2x2_croc.y $delta_tr.x
ADD $half_wid_ROC_tr $dim_croc2x2_croc.x $delta_tr.y
MUL $half_len_cos_tr $half_len_ROC_tr $cos_rot_hdi
MUL $half_wid_sin_tr $half_wid_ROC_tr $sin_rot_hdi
MUL $half_len_sin_tr $half_len_ROC_tr $sin_rot_hdi
MUL $half_wid_cos_tr $half_wid_ROC_tr $cos_rot_hdi

ADD $delta_x $half_len_sin_tr $half_wid_cos_tr
SUB $delta_y $half_wid_sin_tr $half_len_cos_tr
ADD $pos_TR_ROC_center $pos_croc2x2_hdi_final {$delta_x,$delta_y,0}

#BR
ADD $half_len_ROC_br $dim_croc2x2_croc.y $delta_br.x
ADD $half_wid_ROC_br $dim_croc2x2_croc.x $delta_br.y
MUL $half_len_cos_br $half_len_ROC_br $cos_rot_hdi
MUL $half_wid_sin_br $half_wid_ROC_br $sin_rot_hdi
MUL $half_len_sin_br $half_len_ROC_br $sin_rot_hdi
MUL $half_wid_cos_br $half_wid_ROC_br $cos_rot_hdi

SUB $delta_x $half_wid_cos_br $half_len_sin_br
ADD $delta_y $half_wid_sin_br $half_len_cos_br
ADD $pos_BR_ROC_center $pos_croc2x2_hdi_final {$delta_x,$delta_y,0}

#BL
ADD $half_len_ROC_bl $dim_croc2x2_croc.y $delta_bl.x
ADD $half_wid_ROC_bl $dim_croc2x2_croc.x $delta_tr.y
MUL $half_len_cos_bl $half_len_ROC_bl $cos_rot_hdi
MUL $half_wid_sin_bl $half_wid_ROC_bl $sin_rot_hdi
MUL $half_len_sin_bl $half_len_ROC_bl $sin_rot_hdi
MUL $half_wid_cos_bl $half_wid_ROC_bl $cos_rot_hdi

ADD $delta_x $half_len_sin_bl $half_wid_cos_bl
SUB $negDelta_x 0 $delta_x
SUB $delta_y $half_len_cos_bl $half_wid_sin_bl
ADD $pos_BL_ROC_center $pos_croc2x2_hdi_final {$negDelta_x,$delta_y,0}

#TL
ADD $half_len_ROC_tl $dim_croc2x2_croc.y $delta_tl.x
ADD $half_wid_ROC_tl $dim_croc2x2_croc.x $delta_tl.y
MUL $half_len_cos_tl $half_len_ROC_tl $cos_rot_hdi
MUL $half_wid_sin_tl $half_wid_ROC_tl $sin_rot_hdi
MUL $half_len_sin_tl $half_len_ROC_tl $sin_rot_hdi
MUL $half_wid_cos_tl $half_wid_ROC_tl $cos_rot_hdi

SUB $delta_x $half_len_sin_tl $half_wid_cos_tl
ADD $delta_y $half_wid_sin_tl $half_len_cos_tl
SUB $negDelta_y 0 $delta_y
ADD $pos_TL_ROC_center $pos_croc2x2_hdi_final {$delta_x,$negDelta_y,0}

#Copying the z-components
COPY $pos_TL_ROC_center.z $pos_croc2x2_hdi_final.z
COPY $pos_BR_ROC_center.z $pos_croc2x2_hdi_final.z
COPY $pos_BL_ROC_center.z $pos_croc2x2_hdi_final.z
COPY $pos_TR_ROC_center.z $pos_croc2x2_hdi_final.z

# Step 5. Prompt removal of 4 CROC Digital chips from gelpack and placement on LaunchROC
@STEP_FIVE CHOICEPOPUP $choice "Have you placed the gelpack on the gelpack release station?" "Yes, continue" "No, ask me again"
GOTOIFN @STEP_FIVE $choice
SETVAC gelpak_release 1
@STEP_FIVE_i CHOICEPOPUP $choice "Have you placed the four ROCs on the Launchpad?" "Yes, continue" "No, ask me again"
GOTOIFN @STEP_FIVE_i $choice
SETVAC gelpak_release 0
@STEP_FIVE_ii CHOICEPOPUP $choice "Is Chuck 0 clear?" "Yes, continue" "No, ask me again"
GOTOIFN @STEP_FIVE_ii $choice
@STEP_FIVE_iii CHOICEPOPUP $choice "Is the Station 0 Weight Tool ready?" "Yes, continue" "No, ask me again"
GOTOIFN @STEP_FIVE_iii $choice


HOME
END


# SURVEYPOS
# Arguments:
# $x_corner - Approximate position of an object that you would like to know the precise position. Returns with precise position written in this location
#
# Returns:
# $x_corner - Updated position of the corner that is being looked for
@SURVEYPOS(x_corner)
  MOVESAFE $x_corner 100
  @SURCORNPOP VIDEO
  CHOICEPOPUP $choice "Did you correctly align the cursor with the marker?" "Yes" "No"
  GOTOIFN @SURCORNPOP $choice
  GETPOS $x_corner
  RETURN $x_corner


# FINDCORNERS
# Arguments:
# $top_right - rough position of the top-right bond pad
# $half_bond_dim - vector containing half-width/length between bond pads
#
# Returns:
# $tr - center of top-right bond pad
# $br - center of bottom-right bond pad
# $bl - center of bottom-left bond pad
# $tl - center of top-left bond pad
@FINDCORNERS(top_right,half_bond_dim)
  # Obtain full width and length dimensions
  MUL $bond_dim $half_bond_dim {2,2,0}

  # Find positions of opposite corners of top-right bond pad
  @FIND_0 CHOICEPOPUP $choice "Ready to find a corner of the top-right bond pad?" "Yes" "No"
  GOTOIFN @FIND_0 $choice
  CALL @SURVEYPOS $top_right -> $tr_1

  @FIND_1 CHOICEPOPUP $choice "Ready to find the opposite corner of the top-right bond pad?" "Yes" "No"
  GOTOIFN @FIND_1 $choice
  CALL @SURVEYPOS $tr_1 -> $tr_2

  # Obtain rough coordinates for bottom-right bond pad
  COPY $bot_right $tr_2
  ADD $bot_right.y $bot_right.y $bond_dim.y

  # Find positions of opposite corners of bottom-right bond pad
  @FIND_2 CHOICEPOPUP $choice "Ready to find a corner of the bottom-right bond pad?" "Yes" "No"
  GOTOIFN @FIND_2 $choice
  CALL @SURVEYPOS $bot_right -> $br_1

  @FIND_3 CHOICEPOPUP $choice "Ready to find the opposite corner of the bottom-right bond pad?" "Yes" "No"
  GOTOIFN @FIND_3 $choice
  CALL @SURVEYPOS $br_1 -> $br_2

  # Obtain rough coordinates for bottom-left bond pad
  COPY $bot_left $br_2
  SUB $bot_left.x $bot_left.x $bond_dim.x

  # Find positions of opposite corners of bottom-left bond pad
  @FIND_4 CHOICEPOPUP $choice "Ready to find a corner of the bottom-left bond pad?" "Yes" "No"
  GOTOIFN @FIND_4 $choice
  CALL @SURVEYPOS $bot_left -> $bl_1

  @FIND_5 CHOICEPOPUP $choice "Ready to find the opposite corner of the bottom-left bond pad?" "Yes" "No"
  GOTOIFN @FIND_5 $choice
  CALL @SURVEYPOS $bl_1 -> $bl_2

  # Obtain rough coordinates for top-left bond pad
  COPY $top_left $bl_2
  SUB $top_left.y $top_left.y $bond_dim.y

  # Find positions of opposite corners of top-left bond pad
  @FIND_6 CHOICEPOPUP $choice "Ready to find a corner of the top-left bond pad?" "Yes" "No"
  GOTOIFN @FIND_6 $choice
  CALL @SURVEYPOS $top_left -> $tl_1

  @FIND_7 CHOICEPOPUP $choice "Ready to find the opposite corner of the top-left bond pad?" "Yes" "No"
  GOTOIFN @FIND_7 $choice
  CALL @SURVEYPOS $tl_1 -> $tl_2

  # Average each pair of corner positions

  ADD $tr $tr_1 $tr_2
  MUL $tr $tr {0.5,0.5,0.5}

  ADD $br $br_1 $br_2
  MUL $br $br {0.5,0.5,0.5}

  ADD $bl $bl_1 $bl_2
  MUL $bl $bl {0.5,0.5,0.5}

  ADD $tl $tl_1 $tl_2
  MUL $tl $tl {0.5,0.5,0.5}

  RETURN $tr $br $bl $tl
